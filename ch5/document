在GO中， 函数被看成第一类值（first-class value）：函数像其他值一样，拥有类型，可以赋值给其他变量，传递给函数，从函数中返回
。对函数值的调用，类似于函数的调用

func square(n int) int { return x * x}
func negative(n int) int { return -n }
func product(m, n int) int { return m * n }

f := square
fmt.Println(f(3))

f = negative
fmt.Println(f(3))

函数类型的零值是nil

函数值之间不能比较， 也不能用函数值作为map的key

拥有函数名的的函数只能在包一级的语法块中被声明， 通过函数字面量，我们可以绕过这一限制。
函数值字面量是一种表达式， 它的值被称为匿名函数
最重要的是，通过这种方式定义的函数可以访问完整的词法语境。意味着在函数内部定义的匿名函数
内部可以引用该函数的变量
